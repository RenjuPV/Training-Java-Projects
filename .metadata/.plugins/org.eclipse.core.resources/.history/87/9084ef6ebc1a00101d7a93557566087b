package com.training.config;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Function;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;



public class JwtUtil {
	
	private String SECRET="secret";
	
	public String generateToken(String userName) {
		Map<String, Object>claims=new HashMap<>();
		return createToken(claims,userName);
		
	}
	
	private String createToken(Map<String, Object>claims,String userName) {
		return Jwts.builder().setClaims(claims).setSubject(userName)
				.setIssuedAt(new Date(System.currentTimeMillis()))
				.setExpiration(new Date(System.currentTimeMillis()+1000*60*30))
				.signWith(SignatureAlgorithm.HS256,SECRET).compact();
	}
	
	
	public String extractUsername(String token) {
		return extractClaim(token,Claims::getSubject);
		
	}
	
	public Date extractExpiration(String token) {
		return extractClaim(token,Claims::getExpiration);
		
	}
	
	private Claims extractAllClaims(String token) {
		return Jwts.parser().setSigningKey(SECRET)
				.parseClaimsJws(token).getBody();
		
	}
	
	public <T> T extractClaim(String token,Function<Claims,T>claimsResolver) {
		final Claims claims
	}
	
	

}
