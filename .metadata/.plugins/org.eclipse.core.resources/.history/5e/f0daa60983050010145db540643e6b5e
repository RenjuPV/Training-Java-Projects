package com.training.ui;

import java.util.List;

import com.training.model.Player;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import jakarta.persistence.Query;

public class Main2 {

	private static void insert() {
		Player player = new Player(102, "Rohit", "Batsman", 34, 2);

		EntityManagerFactory emf = Persistence.createEntityManagerFactory("PU");

		EntityManager em = emf.createEntityManager();

		em.getTransaction().begin();
		em.persist(player);
		em.getTransaction().commit();

		em.close();
		emf.close();
	}

	private static void read() {

		EntityManagerFactory emf = Persistence.createEntityManagerFactory("PU");

		EntityManager em = emf.createEntityManager();

		Player player = em.find(Player.class, 101);
		System.out.println(player);

		em.close();
		emf.close();
	}

	private static void update() {

		EntityManagerFactory emf = Persistence.createEntityManagerFactory("PU");

		EntityManager em = emf.createEntityManager();

		Player player = em.find(Player.class, 101);
		player.setTypeOfPlayer("AllRounder");
		em.getTransaction().begin();
		em.merge(player);
		em.getTransaction().commit();

		em.close();
		emf.close();
	}

	private static void readAll() {

		EntityManagerFactory emf = Persistence.createEntityManagerFactory("PU");

		EntityManager em = emf.createEntityManager();

		String qry="from Player";//JPQL
		Query query=em.createQuery(qry);
		
		List<Player>playerList=query.getResultList();
		System.out.println(playerList);

		em.close();
		emf.close();
	}
	
	private static void delete() {

		EntityManagerFactory emf = Persistence.createEntityManagerFactory("PU");

		EntityManager em = emf.createEntityManager();
		
		Player player = em.find(Player.class, 101);


		em.getTransaction().begin();
		em.remove(player);
		em.getTransaction().commit();

		em.close();
		emf.close();

	}

	public static void main(String[] args) {
		 insert();
		// read();
//		update();
		//readAll();
		 //delete();
	}

}